user nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name bows.co.kr;

        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        server_name ~^(?!bows\.co\.kr).*$;

        location /.well-known/acme-challenge/ {
            proxy_pass http://${INGRESS_CONTROLLER_EXTERNAL_IP};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name bows.co.kr;
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/bows.co.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bows.co.kr/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/ {
            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    server {
        listen 443;
        server_name ~^(?!bows\.co\.kr).*$;
        server_tokens off;

        location / {
            proxy_pass https://${INGRESS_CONTROLLER_EXTERNAL_IP};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_server_name on;
            proxy_intercept_errors on;
            error_page 404 = @handle_404;
        }

        location @handle_404 {
            return 404 "The requested resource could not be found.";
        }
    }

}