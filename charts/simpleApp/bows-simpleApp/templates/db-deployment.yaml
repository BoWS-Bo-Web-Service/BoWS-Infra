apiVersion: v1
kind: ConfigMap
metadata:
  name: db-schema-{{ .Values.projectId }}
  namespace: {{ .Values.namespace }}
  labels:
    projectName: {{ .Values.projectName | lower }}
    projectId: {{ .Values.projectId | quote }}
    tier: db
data:
  init-{{ .Values.projectId }}.sql: |
    {{ .Values.app.db.schema | indent 4 }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc-{{ .Values.projectId }}
  namespace: {{ .Values.namespace }}
  labels:
    projectName: {{ .Values.projectName | lower }}
    projectId: {{ .Values.projectId | quote }}
    tier: db
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.app.db.storageClass }}
  resources:
    requests:
      storage: {{ .Values.app.db.storageSize }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-{{ .Values.projectId }}
  namespace: {{ .Values.namespace }}
  labels:
    projectName: {{ .Values.projectName | lower }}
    projectId: {{ .Values.projectId | quote }}
    tier: db
spec:
  serviceName: db-service-{{ .Values.projectId }}
  replicas: 1
  selector:
    matchLabels:
      projectName: {{ .Values.projectName | lower }}
      projectId: {{ .Values.projectId | quote }}
      tier: db
  template:
    metadata:
      labels:
        projectName: {{ .Values.projectName | lower }}
        projectId: {{ .Values.projectId | quote }}
        tier: db
    spec:
      initContainers:
        - name: init-symlink
          image: busybox
          command: [ 'sh', '-c', 'ln -s /docker-entrypoint-initdb.d/bows-{{ .Values.projectId }}/init-{{ .Values.projectId }}.sql /docker-entrypoint-initdb.d/init-{{ .Values.projectId }}.sql' ]
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      containers:
        - name: db-{{ .Values.projectId }}
          image: {{ .Values.app.db.image.name }}:{{ .Values.app.db.image.tag }}
          ports:
            - containerPort: {{ .Values.app.db.port }}
          env:
          {{- range $name, $value := .Values.app.db.env }}
            - name: {{ $name }}
              value: {{ $value }}
          {{- end }}
          volumeMounts:
            - name: storage-{{ .Values.projectId }}
              mountPath: /var/lib/mysql
              subPath: bows-{{ .Values.projectId }}
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/bows-{{ .Values.projectId }}
      volumes:
        - name: init-script
          configMap:
            name: db-schema-{{ .Values.projectId }}
  volumeClaimTemplates:
    - metadata:
        name: storage-{{ .Values.projectId }}
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.app.db.storageClass }}
        resources:
          requests:
            storage: {{ .Values.app.db.storageSize }}

---

apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: db-service-{{ .Values.projectId }}
  labels:
    projectName: {{ .Values.projectName | lower }}
    projectId: {{ .Values.projectId | quote }}
    tier: db
spec:
  selector:
    projectName: {{ .Values.projectName | lower }}
    projectId: {{ .Values.projectId | quote }}
    tier: db
  ports:
    - protocol: {{ .Values.app.db.protocol }}
      port: {{ .Values.app.db.port }}
      targetPort: {{ .Values.app.db.port }}